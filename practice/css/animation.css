@charset "UTF-8";

*,*::before,*::after {
  box-sizing: border-box;
}

a {
  color: #333;
  text-decoration: none;
}

main{
  margin: 50px auto;
  width: 1000px;
  background-color: #eee;
  padding: 20px;
}

.animations {
  max-width: 1000px;
  width: 100%;
  padding: 20px;
  background-color: #eee;
  margin: 20px auto;
}

@keyframes translateX {
  100% {
    transform: translateX(900px);
  }
}

.animations > li:not(:first-of-type) {
  margin-top: 5px;
}

.animations > li {
  animation: 5s ease translateX infinite;
  /* transition: 3s; */
  width: 90px;
  height: 90px;
  background-color: #555;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #fff;
  font-weight: bold;
  font-size: 18px;
}

.animations:hover > li {
  transform: translate(900px);
}

.animations .ease {
  animation-timing-function: ease;
}
.animations .linear {
  animation-timing-function: linear;
}
.animations .ease-in {
  animation-timing-function: ease-in;
}
.animations .ease-out {
  animation-timing-function: ease-out;
}
.animations .ease-in-out {
  animation-timing-function: ease-in-out;
}
.animations .steps-start {
  animation-timing-function: steps(5, start);
}
.animations .steps-end {
  animation-timing-function: steps(5, end);
}

.button {
  width: 200px;
  height: 40px;
  background-color: blue;
  color: #fff;
  font-weight: bold;
  font-size: 16px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 5px;
}

.button:not(:first-of-type) {
  margin-top: 20px;
}

.button1 {
  transition: 0.3s;
}

.button2 {
  transition: 0.5s;
}

.button3 {
  transition: 0.5s;
}

.openMenu {
  width: 200px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: blue;
  color: #ffffff;
  font-weight: bold;
  font-size: 18px;
  border-radius: 5px;
  cursor: pointer;
}

.openMenu:hover {
  opacity: 0.5;
}

.menus > li {
  opacity: 0;
  transition: 0.5s ;
  transform: translateY(15px);
}

.menus > li:nth-of-type(2) {
  transition-delay: .1s;
}
.menus > li:nth-of-type(3) {
  transition-delay: .2s;
}
.menus > li:nth-of-type(4) {
  transition-delay: .3s;
}
.menus > li:nth-of-type(5) {
  transition-delay: .4s;
}

.menus > li:not(:first-of-type) {
  margin-top: 5px;
}

.menus.active > li {
  opacity: 1;
  transform: translateY(0px);
}

.circles {
  display: flex;
  justify-content: center;
}

@keyframes flash {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.1;
  }
}

.circles > li {
  width: 20px;
  height: 20px;
  background-color: #555555;
  border-radius: 50%;
  animation: 3s flash infinite;
}

.circles > li:nth-of-type(2) {
  animation-delay: .2s;
}
.circles > li:nth-of-type(3) {
  animation-delay: .4s;
}

.circles > li:not(:first-of-type) {
  margin-left: 10px;
}

@keyframes translate {
  0% {
    transform: translateX(0px);
    background-color: blue;
  }
  100% {
    transform: translateX(500px);
    background-color: yellow;
  }
}

.box {
  width: 50px;
  height: 50px;
  background-color: #333;
  animation: 3s translate 2s 2 backwards;
  animation-play-state: paused;
}

#animation_main {
  height: 100vh;
  width: 100%;
  background-color: #333;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.textAnimation {
  color: #fff;
  font-size: 70px;
}

.textAnimation:not(:first-of-type) {
  margin-top: 20px;
}

@keyframes showTextFromBottom {
  0% {
    opacity: 0;
    transform: translateY(60px);
  }
  100% {
    opacity: 1;
  }
}

@keyframes showTextFromTop {
  0% {
    opacity: 0;
    transform: translateY(-60px);
  }
  100% {
    opacity: 1;
  }
}

@keyframes showUpBottomText {
  0% {
    transform: translateY(100%);
  }
  100% {
    transform: translateY(0%);
  }
}
@keyframes showUpTopText {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(0%);
  }
}

.textAnimation span {
  display: inline-block;
}

.textAnimation > span {
  overflow: hidden;
}

.textAnimation > span:nth-of-type(odd) > span {
  animation: 1s showUpTopText ease-out backwards;
}

.textAnimation > span:nth-of-type(even) > span {
  animation: 1s showUpBottomText ease-out backwards;
}

@media screen and (min-width: 769px) {
  .button1:hover {
    opacity: 0.5;
    transform: translateY(-2px);
    box-shadow: 0 0 3px blue;
  }
  .button2:hover {
    background-color: red;
    font-size: 20px;
  }
  .button3:hover {
    transform: skew(-20deg) translateY(-5px);
  }
}